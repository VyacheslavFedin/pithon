# Реализуйте метод, принимающий в качестве аргументов два целочисленных массива,
# и возвращающий новый массив, каждый элемент которого равен разности элементов
# двух входящих массивов в той же ячейке.
# Если длины массивов не равны, необходимо как-то оповестить пользователя.

arr_1 = [1, 2, 3, 4, 5]
arr_2 = [6, 7, 8, 9, 10]
arr_3 = []
print(arr_1, arr_2)


def metod_01(arr_1, arr_2):

    if (len(arr_1) != len(arr_2)):
        return print('ошибка: длины массивов не равны')
        
    for i in range(len(arr_1)):
        arr_3.append(arr_1[i]-arr_2[i])
    return print(arr_3)


metod_01(arr_1, arr_2)
print('')

# Реализуйте метод, принимающий в качестве аргументов два 
# целочисленных массива, и возвращающий новый массив, каждый 
# элемент которого равен частному элементов двух входящих 
# массивов в той же ячейке. Если длины массивов не равны, 
# необходимо как-то оповестить пользователя. Важно: 
# При выполнении метода единственное исключение, которое 
# пользователь может увидеть - RuntimeException, т.е. ваше.


arr_1 = [1, 2, 3, 4, 5]
arr_2 = [6, 7, 8, 9, 10,11]
arr_3 = []
print(arr_1, arr_2)


def metod_02(arr_1, arr_2):

    if (len(arr_1) != len(arr_2)):
        return print('ошибка: длины массивов не равны')
        
    for i in range(len(arr_1)):
        # if arr_2[i]==0 :  return print('Ошибка : один из элементов "arr_2" равен 0')
        try :
            arr_3.append(arr_1[i]/arr_2[i])
        except Exception : #ArithmeticError:
            return print('арифметическая ошибка')
    return print(arr_3)


metod_02(arr_1, arr_2)